@use 'color_schemes' as cs;
@use 'mediaquery' as mq;
@use 'adjustFlex' as af;

*{
    padding: 0;
    margin: 0;
}

body{
    background-color: cs.$bg-color-body;
    color: cs.$color-body;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-size: 120%;
    text-align: center;
    
}
.header {
    margin-bottom: 20px;
    background: linear-gradient(to right, cs.$bg-color-body, cs.$bg-color-header, cs.$color-body,cs.$bg-color-body);
    width: 80%;
    margin: 0 10% 20px 10%;
    color: cs.$color-header;
    h1{
        color: cs.$color-h1;
    }
}
section.containerAll{
    display: flex;
    flex-wrap: wrap;
    // display: grid;
    margin: 20px 40px 20px 40px;
    // grid-template-columns: 1fr 0.8fr;
    // border: 2px solid rgb(225, 28, 215);
    justify-content: center;
    align-items: center;
}
.task-container {
    flex: 1 0 50%;   
    justify-content: center;
    align-content: center;
    // margin-bottom: 20px;
    min-height: 50vh;
    padding: 10px;
    border: 2px solid salmon;
}

.task-input{
    flex: 1 0 30%;
    
    display:grid;
    grid-template-columns: 1.6fr 0.5fr;
    // grid-template-rows: repeat(2fr, auto);
    
    justify-content: center;
    align-content: center;
    background-color: cs.$bg-color-input;
    border: 2px solid cs.$bg-color-input;
    @include mq.mobileScreen{
               grid-template-columns: auto;
               margin-top: 10px;
            }
    
    div.textArea{
        // height: 20%;
       
        margin-right: 10px;
       
        
        textarea{
            padding: 5px 10px 5px 10px;
            border: 2px solid cs.$bg-color-textArea;
            border-radius: 10px;   
            text-align: left;
            text-indent: 10px;
              
        }
       
    }
    div#save {
       
        // margin-top: 10px;
        align-self: center;
        justify-self: center;
       
       
        button{
        
            font-weight: bold;
            border-radius: 5px;        
            // color: cs.$color-tasks;
            background-color: cs.$bg-color-textArea;
            border: 2px solid cs.$border-color-button;
            padding: 5px 20px 5px 20px;
            
    
        }
        button:hover{
            background-color: cs.$bg-color-header;
            cursor: pointer;
        }
        
    }
    div.foot-message{
        grid-column: span 2;
        
        text-decoration: underline;
        // this one below does not exist on some browsers.
        text-underline-offset: 5px;
        @include mq.mobileScreen{
            // to make the changes on the main grid effective, 
            //  re-adapting the span length to 1 is needed. 
            grid-column: span 1;
         }
    }
  
}

li.taskTitle {
    // display: inline-block;
    display: grid;
    grid-template-columns: 2fr 10%;
    justify-content: center;
    text-align: left;
    list-style: decimal-leading-zero;
    font-weight: bold;
    text-transform: uppercase;
    background-color: cs.$bg-color-tasks;
    margin-bottom: 1%;

    // Adapt so long texts can start on new-line
    // as they hit the edge of the li box or grid.
   
    // set minimum and maximum row size for the cells.
    // this applies to both div and ul inside of it.
    grid-auto-rows: minmax(20px, auto);
    word-wrap: break-word;

    // white-space: pre-wrap;
    // last resort, use word-break: break all.
    // word-break: break-all;
   
}


ul.subTask {
    color: cs.$color-bullets;
    text-align: left;
    background-color: none;
     
    
    li {
        list-style-type: circle;
        // font-size: 100%;
        list-style-position:inside;
        font-weight: normal;
        font-size: normal;
        text-transform: none;  
        
    }
   
}
div.delImgContainer{
    // display: inline-block;
    justify-content: center;
    align-items: center;
   
    
    }
img.deleteTask{
    height: 20px;
    width: 20px;
     
    }
img.stopprop{
    background-color: cs.$color-warning;
}
img.deleteTask:hover{
    cursor: pointer;
}


